/******************************************************************************
** Lab 1: Sorting, Complexity
******************************************************************************/

Group members:
- Amin Mahmoudifard
- Faiza Amjad
- Yasamin Fazelidehkordi

/******************************************************************************
** Task: Figuring out the asymptotic complexity
**
** 1. What is the complexity of running each of the following algorithms
**    on each of the following kinds of inputs?
******************************************************************************/

Insertion.java on:

- random inputs:      Quadratic
- 95% sorted inputs:  Quadratic
- sorted inputs:      Linear

Quick.java on:

- random inputs:      Linearithmic
- 95% sorted inputs:  Linearithmic
- sorted inputs:      Quadratic

Merge.java on:

- random inputs:      Linearithmic
- 95% sorted inputs:  Linearithmic
- sorted inputs:      Linearithmic

/******************************************************************************
** Task: Improving quicksort
**
** 2. Do the following changes affect the asymptotic complexity of quicksort
**    on any of the three degrees of sortedness of the input?
**    If so, what is it that changes?
******************************************************************************/

Shuffling the array first:
Yes
It changes the complexity of sorted arrays from quadratic to linearithmic. However, it does not change the complexity
of random and 95% sorted arrays.


Median-of-three pivot selection:
Yes
It improves the runtime of the sorting process and changes the complexity of sorted array from quadratic to linearithmic but it
does not change the complexity of 95% sorted and random arrays.

Insertion sort for small subarray:
no
It improves the runtime of the sorting process, but it does not change the complexity for any of the sortedness degrees.


/******************************************************************************
** 3. What is a good cutoff to use for insertion sort?
**    Explain briefly how you came to this answer.
**    Remember that you should try to find the answer in a systematic way.
******************************************************************************/

By comparing the runtimes, we figured out that the initial cutoff value is 100 then we tested different values grater and
less than 100 and we got the best performance for the cutoff value of 110. Our approach for the comparison was dividing
the improved runtimes by the base runtimes to see how much each version of our cutoff value has improved the base case
in terms of percentage. Improvement percentages are as follows:

120: 11%
115: 11%
110: 20%
105: 16%
100: 13%
90: 14%
80: 12%
70: 14%
60: 18%
50: 15%
40: 13%

As you can see the best improvement belongs to cutoff value of 110.

/******************************************************************************
** 4. Which combination of improvements gives the best performance?
******************************************************************************/

We first tested all the improvements individually then we combined every two of them and at last we tested all of them
together and we figured out that the combination of "insertion" and "median_of_three" gives the best performance for all sorted,
95% sorted and random arrays.

/******************************************************************************
** Appendix: General information
**
** A. Approximately how many hours did you spend on the assignment?
******************************************************************************/

Amin Mahmoudifard:  7.5 Hours
Faiza Amjad:  6.5 Hours
Yasamin Fazelidehkordi:  8.5 Hours


/******************************************************************************
** B. Are there any known bugs / limitations?
******************************************************************************/

Fortunately we did not get any error messages informing us about a bug.

/******************************************************************************
** C. Did you collaborate with any other students on this lab?
**    If so, please write in what way you collaborated and with whom.
**    Also include any resources (including the web) that you may
**    may have used in creating your design.
******************************************************************************/

No. We did this lab without help from any other groups/students.

/******************************************************************************
** D. Describe any serious problems you encountered.                    
******************************************************************************/

There were some technical issues in cloning the project for one of the group members. However, we fixed it with the help
of a TA.

/******************************************************************************
** E. List any other comments here.
**    Feel free to provide any feedback on how much you learned 
**    from doing the assignment, and whether you enjoyed it.                                             
******************************************************************************/


